// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    handleSearch={[MockFunction]}
    handleTimer={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="header-container"
      >
        <div
          className="branding"
        >
          <h1>
            Pictr
          </h1>
          <img
            alt="cheese"
            src="camera.png"
          />
        </div>
        <div>
          <SearchBox
            handleSearch={[MockFunction]}
            handleTimer={[MockFunction]}
          />
        </div>
      </div>,
      "className": "header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="branding"
          >
            <h1>
              Pictr
            </h1>
            <img
              alt="cheese"
              src="camera.png"
            />
          </div>,
          <div>
            <SearchBox
              handleSearch={[MockFunction]}
              handleTimer={[MockFunction]}
            />
          </div>,
        ],
        "className": "header-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                Pictr
              </h1>,
              <img
                alt="cheese"
                src="camera.png"
              />,
            ],
            "className": "branding",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Pictr",
              },
              "ref": null,
              "rendered": "Pictr",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "cheese",
                "src": "camera.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SearchBox
              handleSearch={[MockFunction]}
              handleTimer={[MockFunction]}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleSearch": [MockFunction],
              "handleTimer": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="header-container"
        >
          <div
            className="branding"
          >
            <h1>
              Pictr
            </h1>
            <img
              alt="cheese"
              src="camera.png"
            />
          </div>
          <div>
            <SearchBox
              handleSearch={[MockFunction]}
              handleTimer={[MockFunction]}
            />
          </div>
        </div>,
        "className": "header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="branding"
            >
              <h1>
                Pictr
              </h1>
              <img
                alt="cheese"
                src="camera.png"
              />
            </div>,
            <div>
              <SearchBox
                handleSearch={[MockFunction]}
                handleTimer={[MockFunction]}
              />
            </div>,
          ],
          "className": "header-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  Pictr
                </h1>,
                <img
                  alt="cheese"
                  src="camera.png"
                />,
              ],
              "className": "branding",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Pictr",
                },
                "ref": null,
                "rendered": "Pictr",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "cheese",
                  "src": "camera.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <SearchBox
                handleSearch={[MockFunction]}
                handleTimer={[MockFunction]}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleSearch": [MockFunction],
                "handleTimer": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
